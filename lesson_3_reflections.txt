Q: When would you want to use a remote repository rather than keeping all your work local?
A: When you would like to collaborate with others, when you want edit source code from multiple systems, when you want to push changes to a remote server (Heroku?), to back up your repository

commands: git remote (see all git remotes)
git remote add NAME GITHUBURL (standard default name is origin)
git remove -v (verbose output shows feth and push urls) 

Push repository to remote: git push origin master
Pull repository from remote: git pull origin master

Q: Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

A: Because you could be be busy modifying your version of master that could have conflicts with whats on GitHub. If you have branched your changes it might not be an issue, but it is better to be in control to keep track of the log

When you clone a repo it automatically adds a remote (git remote -v to check)

Q: Describe the differences between forks, clones, and branches. When would you use one instead of another?
A:
Branch: A subset of the repository that can be used to experiment or develop a new feature before commiting it to the master. It is within the same repository.
Clone: A copy of a repository and it's commit history. This will be used to get a copy of someone elses repository or a remote repository that can be changed independantly.
Fork: A GitHub concept of cloning a repository on the GitHub servers that also keeps the links to the original repository. Good to give the original authors credit and also show derivitives.

Commands:
git pull origin master
IS THE SAME AS
git fetch origin
git merge master master/origin
(it fetches the latest commits into a master/origin branch and then merges it)

Fast-forward Merge: The branch you are merging into is an ancestor of the branch you merging from

Q: What is the benefit of having a copy of the last known state of the remote stored locally?

A: You work on the latest changes without the need for an internet connection.

Pushing new commits to a branch with a pull request will automatically update the pull request

Q: How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

A: You could communicate before making changes and compare files manually. There will be less commands to run but a lot more room for error. It also makes experimentation more difficult since you would have to create copies. 

Q: When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

When you want to make changes or add aditional features that can be used in a pull request to add to the master by the maintainer. Great way to logical seperate a logical set of work to work on until it is done.