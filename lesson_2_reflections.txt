Q: What happens when you initialize a repository? Why do you need to do it?

A: It creates all the files neccessary to create a repository. It is neccessary to tell git that you want to start tracking changes in that directory

Commands: git init - create repository
git status - show status and untracked files

Q: How is the staging area different from the working directory and the repository? What value do you think it offers?

A: The staging area allows you to package your commit to the repository before you do the commmit. It allows you do put files in a bundle while the working directory contians everything and the repository only the things you are going to commit.

Best practice is to do commits as commands ie. "Add lesson 1 reflections" vs. what was done "Added lesson 1 reflections"

Testing commit with nano: git config --global core.editor nano

Commands: git diff - show diff between working directory and staging area
git diff --staged - show diff between staging area and repository

git reset --hard - removes changes from staging area and working directory (CAREFULL!!)

git checkout master - revert to master

Q: How can you use the staging area to make sure you have one commit per logical change?

By using the diff command against the most recent commit you can see that you are commiting the right changes.

It differs from your working directory so you can also see most current against what you are reaady to commit by using the add command and the you can double check it against the latest commit.